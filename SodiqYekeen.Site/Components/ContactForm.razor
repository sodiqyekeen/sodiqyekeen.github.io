@using SodiqYekeen.Site.Models
@inject IJSRuntime JSRuntime
@inject HttpClient HttpClient
@inject SodiqYekeen.Site.Services.ContactService ContactService;
@using System.Net.Mail;

<EditForm Model="formModel" class="contactForm" OnValidSubmit="HandleFormSubmission">
    <div class="row">
        <DataAnnotationsValidator />
        @if (displaySentAlert)
        {
            <div id="sendmessage">Your message has been sent. Thank you!</div>
        }
        <div id="errormessage"></div>

        <div class="col-lg-6">
            <div class="form-group contact-block1">
                <InputText @bind-Value="formModel.Name" class="form-control" placeholder="Your Name" />
                <ValidationMessage For="(() => formModel.Name)" class="validation" />
            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                <InputText @bind-Value="formModel.Email" class="form-control" placeholder="Your Email" />
                <ValidationMessage For="(() => formModel.Email)" class="validation" />
            </div>
        </div>

        <div class="col-lg-12">
            <div class="form-group">
                <InputText @bind-Value="formModel.Subject" class="form-control" placeholder="Subject" />
                <ValidationMessage For="(() => formModel.Subject)" class="validation" />
            </div>
        </div>

        <div class="col-lg-12">
            <div class="form-group">
                <InputTextArea @bind-Value="formModel.Message" class="form-control" placeholder="Message" />
                <ValidationMessage For="(() => formModel.Message)" class="validation" />
            </div>
        </div>

        <div class="col-lg-12">
            <input type="submit" class="btn btn-defeault btn-send" value="Send message">
        </div>

    </div>
</EditForm>

@code{
    ContactFormModel formModel = new ContactFormModel();
    bool displaySentAlert;
    string google;

    //protected override async void OnAfterRender(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        google = await JSRuntime.InvokeAsync<string>("runCaptcha");
    //        StateHasChanged();
    //    }
    //}
    void HandleFormSubmission()
    {
        //formModel.ReCaptcha = google;
        ContactService.RunAsync();
        displaySentAlert = true;
    }


}