@inject HttpClient HttpClient
@inject CosmicService CosmicService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (posts == null)
{
    <div class="spinner"></div>
}
else
{
    foreach (var post in posts)
    {
        <div class="col-lg-4 col-md-6">
            <div class="journal-info">
                <NavLink href="@($"blog/{post.Slug}")"><img src="@(post.Thumbnail)" class="img-responsive" alt="img"></NavLink>
                <div class="journal-txt">
                    <h4><NavLink href="@($"blog/{post.Slug}")">@post.Title</NavLink></h4>
                </div>
            </div>
        </div>
    }
}

@code {
    PostResponse postResponse = null;

    IEnumerable<Post> posts = null;

    protected override async Task OnInitializedAsync()
    {
        if (await localStorage.ContainKeyAsync("gridposts"))
        {
            posts = await localStorage.GetItemAsync<IEnumerable<Post>>("gridposts");
        }
        else
        {
            posts = await CosmicService.GetTopPosts();
            await localStorage.SetItemAsync("gridposts", posts);
        }
    }
}
